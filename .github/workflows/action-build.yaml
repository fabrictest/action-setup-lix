---
name: Action / Build
on:
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
  push:
    branches:
      - main
  schedule:
    - cron: 33 01 * * *
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != github.event.repository.default_branch }}
permissions: {}
jobs:
  build-lix-stores:
    name: Lix stores
    strategy:
      fail-fast: true
      matrix:
        runs-on:
          - macos-13 # X64
          - macos-15 # ARM64
          - ubuntu-24.04
    runs-on: ${{ matrix.runs-on }}
    permissions:
      attestations: write
      id-token: write
    steps:
      - name: Bootstrap Lix
        uses: fabrictest/action-setup-lix@f8931851e8f8db4d7745a048a157cdcca7b5e636 # v0.14.0
        with:
          lix-on-tmpfs: true
      - name: Set up Magic Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@6221693898146dc97e38ad0e013488a16477a4c4 # v9
        with:
          diagnostic-endpoint: ""
          use-flakehub: false
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Build Lix stores
        run: |
          nix build .#lix-stores
        shell: bash
      - name: Attest Lix stores
        uses: actions/attest-build-provenance@520d128f165991a6c774bcb264f323e3d70747f4 # v2.2.0
        with:
          subject-path: result/lix-*.tar.*
      - name: Upload Lix stores to GitHub
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: lix-stores-${{ runner.os }}-${{ runner.arch }}
          path: result/lix-*.tar.*
      - name: Gather which Lix versions were built for this platform
        run: |
          printf %s\\n result/lix-*.tar.* |
            cut -d- -f2 |
            jq -Rc --arg runs-on "$runs_on" \
              '{version: .} + $ARGS.named' >build-matrix-"$RUNNER_OS"-"$RUNNER_ARCH".ndjson
        shell: bash
        env:
          runs_on: ${{ matrix.runs-on }}
      - name: Upload build matrix files to GitHub
        uses: actions/upload-artifact@4cec3d8aa04e39d1a68397de0c4cd6fb9dce8ec1 # v4.6.1
        with:
          name: build-matrix-${{ runner.os }}-${{ runner.arch }}
          path: build-matrix-${{ runner.os }}-${{ runner.arch }}.ndjson
          compression-level: 9
          retention-days: 1
  build-matrix:
    name: Matrix
    needs:
      - build-lix-stores
    runs-on: ubuntu-latest
    permissions: {}
    outputs:
      json: ${{ steps.build-matrix.outputs.json }}
    steps:
      - name: Download build matrix files
        id: files
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: build-matrix-*
          merge-multiple: true
      - name: Generate build matrix
        id: build-matrix
        run: |
          cat <<EOF >>"$GITHUB_OUTPUT"
          json<<JSON
          $(cat *.ndjson | jq --slurp '{build: .}')
          JSON
          EOF
        shell: bash
        working-directory: ${{ steps.files.outputs.download-path }}
  test-example:
    name: Test example
    needs:
      - build-matrix
    strategy:
      fail-fast: true
      matrix: ${{ fromJSON(needs.build-matrix.outputs.json) }}
    runs-on: ${{ matrix.build.runs-on }}
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          persist-credentials: false
      - name: Download Lix store from GitHub
        id: lix-stores
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: lix-stores-${{ runner.os }}-${{ runner.arch }}
      - name: Install Lix ${{ matrix.build.version }}
        uses: ./
        with:
          lix-on-tmpfs: true
          lix-store-base-dir: ${{ steps.lix-stores.outputs.download-path }}
          lix-version: ${{ matrix.build.version }}
      - name: Verify that Lix was installed
        run: |
          nix-build -v --version
        shell: bash
      - name: Set up Cachix
        uses: cachix/cachix-action@ad2ddac53f961de1989924296a1f236fcfbaa4fc # v15
        with:
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          name: ${{ vars.CACHIX_NAME }}
      - name: Build flake
        run: |
          nix build ./example
        shell: bash
      - name: Print `hello, world` message
        run: |
          ./result/bin/hello
        shell: bash
