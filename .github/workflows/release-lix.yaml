---
name: Release / Lix
on:
  release:
    types:
      - published
jobs:
  attach-lix-stores:
    name: Attach Lix stores to GitHub release
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      pull-requests: read
    steps:
      - name: Retrieve release commit
        id: release
        run: |
          tee -a "$GITHUB_OUTPUT" <<EOF
          commit=$(
            jq --raw-output .release.tag_name "$GITHUB_EVENT_PATH" |
              xargs -I{} -- gh api /repos/{owner}/{repo}/git/ref/tags/{} --jq '.object.sha'
          )
          EOF
        shell: bash
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
      - name: Download Lix stores
        id: lix-stores
        if: ${{ steps.release.outputs.commit }}
        uses: dawidd6/action-download-artifact@20319c5641d495c8a52e688b7dc5fada6c3a9fbc # v8
        with:
          github_token: ${{ github.token }}
          workflow_search: true
          name: "^lix-stores-.*"
          name_is_regexp: true
          path: ${{ runner.temp }}
          commit: ${{ steps.release.outputs.commit }}
          search_artifacts: true
      - name: Verify integrity of Lix stores
        if: ${{ steps.lix-stores.outputs.found_artifact }}
        run: |
          find -L . -type f -name 'lix-*.tar.*' -exec gh attestation verify --{,signer-}repo="$GITHUB_REPOSITORY" '{}' \;
        shell: bash
        working-directory: ${{ runner.temp }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Attach Lix stores to the GitHub release
        if: ${{ steps.lix-stores.outputs.found_artifact }}
        run: |
          jq --raw-output .release.tag_name "$GITHUB_EVENT_PATH" |
            xargs -I '[]' -- find -L . -type f -name 'lix-*.tar.*' -exec gh release upload --repository="$GITHUB_REPOSITORY" '[]' '{}' +
        shell: bash
        working-directory: ${{ runner.temp }}
        env:
          GITHUB_TOKEN: ${{ github.token }}
  pr:
    name: Pull request
    needs:
      - attach-lix-stores
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Mark release PR as published
        run: |
          jq --raw-output .release.tag_name "$GITHUB_EVENT_PATH" |
            xargs -I {} -- gh pr list \
              --search='{} is:merged label:"autorelease: tagged" sort:created-desc' \
              --limit 1 \
              --json number \
              --jq '.[0].number' |
            xargs -I {} -- gh pr edit {} \
              --add-label='autorelease: published' \
              --remove-label='autorelease: tagged' \
        shell: bash
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
