---
name: Build
on:
  workflow_call:
    outputs:
      matrix:
        description: |
          A list of Lix versions built for each GitHub runner,
          for use as input for `strategy.matrix`.

          Format: `{"build": [{"lix-version": "<version>", "runs-on": "<os>"}, ...]}`
        value: ${{ jobs.matrix.outputs.build-matrix }}
jobs:
  lix-stores:
    strategy:
      fail-fast: true
      matrix:
        runs-on:
          - macos-13 # X64
          - macos-15 # ARM64
          - ubuntu-24.04
    name: Lix stores
    runs-on: ${{ matrix.runs-on }}
    permissions:
      attestations: write
      id-token: write
    steps:
      - name: Bootstrap Lix
        uses: fabrictest/action-setup-lix@def519a74f4b43c127a41d8d5eb28323ab485710 # v0.1.0
      - name: Set up Lix cache
        uses: DeterminateSystems/magic-nix-cache-action@87b14cf437d03d37989d87f0fa5ce4f5dc1a330b # v8
        with:
          diagnostic-endpoint: ""
          use-flakehub: false
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Build tarballs
        shell: bash
        run: |
          nix build .#lix-stores
      - name: Attest tarballs
        uses: actions/attest-build-provenance@7668571508540a607bdfd90a87a560489fe372eb # v2.1.0
        with:
          subject-path: result/lix-*.tar.*
      - name: Upload tarballs to GitHub
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: lix-stores-${{ runner.os }}-${{ runner.arch }}
          path: result/lix-*.tar.*
          retention-days: ${{ github.ref_name == github.event.repository.default_branch && null || 1 }}
      - name: Generate file specifying which Lix versions were built for this platform
        shell: bash
        env:
          runs_on: ${{ matrix.runs-on }}
        run: |
          printf %s\\n result/lix-*.tar.* |
            cut -d - -f 2 |
            jq --compact-output --raw-input --arg runs-on "$runs_on" '{"lix-version": .} + $ARGS.named' >build-"$runs_on".jsonl
      - name: Upload build description file to GitHub
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: build-${{ matrix.runs-on }}
          path: build-${{ matrix.runs-on }}.jsonl
          compression-level: 9
          retention-days: 1
  matrix:
    needs:
      - lix-stores
    name: Matrix
    runs-on: ubuntu-24.04
    outputs:
      json: ${{ steps.matrix.outputs.json }}
    steps:
      - name: Download build description files from GitHub
        id: build-files
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: build-*
          merge-multiple: true
      - name: Generate build matrix
        id: matrix
        shell: bash
        env:
          download_path: ${{ steps.build-files.outputs.download-path }}
        run: |
          {
            echo build-matrix'<<'JSON
            cat "$download_path"/*.jsonl | jq --slurp {build:.}
            echo JSON
          } | tee -a "$GITHUB_OUTPUT"
