---
name: Build
on:
  workflow_call:
    outputs:
      support-matrix:
        value: ${{ jobs.support-matrix.outputs.json }}
jobs:
  lix-stores:
    strategy:
      fail-fast: true
      matrix:
        runs-on:
          - macos-latest
          - ubuntu-latest
          # NOTE(ttlgcc): macos-13 is the last Intel-powered macOS runner.
          - macos-13
    name: Lix stores
    runs-on: ${{ matrix.runs-on }}
    permissions:
      id-token: write
    steps:
      - name: Bootstrap Lix
        uses: fabrictest/action-lix-quick-install@a26983acff7d1282354fdf48f1e4dcb883bfb85e # v7.3.0
      - name: Set up Nix cache
        uses: DeterminateSystems/magic-nix-cache-action@87b14cf437d03d37989d87f0fa5ce4f5dc1a330b # v8
        with:
          diagnostic-endpoint: ""
          use-flakehub: false
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Build Lix stores
        shell: bash
        run: |
          nix build .#lix-stores
      - name: Upload Lix stores to GitHub
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: lix-stores-${{ runner.os }}-${{ runner.arch }}
          path: result/lix-*.tar.*
      - name: Generate file specifying which Lix versions were built for this platform
        shell: bash
        env:
          runs_on: ${{ matrix.runs-on }}
        run: |
          printf %s\\n result/lix-*.tar.* |
            cut -d - -f 2 |
            jq --compact-output --raw-input --arg runs-on "$runs_on" '{"lix-version": .} + $ARGS.named' >support-"$runs_on".jsonl
      - name: Upload support file to GitHub
        uses: actions/upload-artifact@6f51ac03b9356f520e9adb1b1b7802705f340c2b # v4.5.0
        with:
          name: support-${{ matrix.runs-on }}
          path: support-${{ matrix.runs-on }}.jsonl
          compression-level: 9
          retention-days: 1
  support-matrix:
    needs:
      - lix-stores
    name: Support matrix
    runs-on: ubuntu-24.04
    outputs:
      json: ${{ steps.matrix.outputs.json }}
    steps:
      - name: Download support files from GitHub
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          path: .
          pattern: support-*
          merge-multiple: true
      - name: Generate support matrix
        id: matrix
        shell: bash
        run: |-
          cat >>"$GITHUB_OUTPUT" <<EOF
          json=$(cat *.jsonl | jq --compact-output --slurp {support: .})
          EOF
