---
name: Publish
on:
  workflow_call:
    secrets:
      RELEASE_PLEASE_PRIVATE_KEY:
        description: |
          Private key of the GitHub app used with the release-please action.
        required: true
jobs:
  release:
    name: Release
    runs-on: ubuntu-24.04
    outputs:
      go: ${{ steps.release.outputs.release_created }}
      tag: ${{ steps.release.outputs.tag_name }}
      commit: ${{ steps.release.outputs.sha }}
    steps:
      - name: Generate app token
        id: app-token
        uses: actions/create-github-app-token@c1a285145b9d317df6ced56c09f525b5c2b6f755 # v1.11.1
        with:
          app-id: ${{ vars.RELEASE_PLEASE_APP_ID }}
          private-key: ${{ secrets.RELEASE_PLEASE_PRIVATE_KEY }}
      - name: Cut release
        id: release
        uses: googleapis/release-please-action@7987652d64b4581673a76e33ad5e98e3dd56832f # v4.1.3
        with:
          token: ${{ steps.app-token.outputs.token }}
          config-file: .github/release-please-config.json
          manifest-file: .github/release-please-manifest.json
          target-branch: ${{ github.ref_name }}
  lix-stores:
    name: Lix stores
    needs:
      - release
    if: ${{ needs.release.outputs.go }}
    runs-on: ubuntu-24.04
    permissions:
      actions: read
      contents: write
    steps:
      - name: Download tarballs
        id: lix-stores
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          pattern: lix-stores-*
          merge-multiple: true
      - name: Verify tarball integrity
        run: |
          for f in "$download_path"/lix-*.tar.*; do
            gh attestation verify "$f" --{,signer-}repo="$GITHUB_REPOSITORY"
          done
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
          download_path: ${{ steps.lix-stores.outputs.download-path }}
      - name: Attach Lix stores to the GitHub release
        run: |
          gh release upload "$tag" "$download_path"/lix-*.tar.* --repo="$GITHUB_REPOSITORY"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
          download_path: ${{ steps.lix-stores.outputs.download-path }}
          tag: ${{ needs.release.outputs.tag }}
  pull-request:
    name: Pull request
    needs:
      - release
      - lix-stores
    if: ${{ needs.release.outputs.go }}
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
    steps:
      - name: Mark release PR as published
        run: |
          gh pr list \
              --repo="$GITHUB_REPOSITORY" \
              --search="$commit"' is:merged label:"autorelease: tagged" sort:created-desc' \
              --limit 1 \
              --json number \
              --jq '.[0].number' |
            xargs -I{} -- gh pr edit {} \
              --add-label='autorelease: published' \
              --remove-label='autorelease: tagged' \
              --repo="$GITHUB_REPOSITORY"
        shell: bash
        env:
          GITHUB_TOKEN: ${{ github.token }}
          commit: ${{ needs.release.outputs.commit }}
