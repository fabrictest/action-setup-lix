---
name: Action / Publish
on:
  release:
    types:
      - published
permissions:
  actions: read
  contents: write
  pull-requests: write
jobs:
  attach-lix-stores:
    name: Attach Lix stores to GitHub release
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: write
      pull-requests: read
    steps:
      - name: Retrieve release commit
        id: release
        run: |
          {
            echo sha'<<'SHA
            gh api /repos/{owner}/{repo}/git/ref/tags/"$tag" -q .object.sha
            echo SHA
          } >>"$GITHUB_OUTPUT"
        shell: bash
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
          tag: ${{ github.event.release.tag_name }}
      - name: Download Lix stores
        id: lix-stores
        uses: dawidd6/action-download-artifact@20319c5641d495c8a52e688b7dc5fada6c3a9fbc # v8
        with:
          github_token: ${{ github.token }}
          workflow_search: true
          path: ${{ runner.temp }}
          name: ^lix-stores-
          name_is_regexp: true
          commit: ${{ steps.release.outputs.sha }}
          search_artifacts: true
      - name: Verify integrity of Lix stores
        if: ${{ steps.lix-stores.outputs.found_artifact }}
        run: |
          for f in lix-stores-*/lix-*.tar.*; do
            gh attestation verify "$f" --{,signer-}repo="$GITHUB_REPOSITORY"
          done
        shell: bash
        working-directory: ${{ runner.temp }}
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Attach Lix stores to GitHub release
        if: ${{ steps.lix-stores.outputs.found_artifact }}
        run: |
          gh release upload "$tag" lix-stores-*/lix-*.tar.*
        shell: bash
        working-directory: ${{ runner.temp }}
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
          tag: ${{ github.event.release.tag_name }}
  publish-pr:
    name: Mark release PR as published
    needs:
      - attach-lix-stores
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
      - name: Retrieve release PR
        id: pr
        run: |
          {
            echo number'<<'NUMBER
            gh pr list \
                -S "$tag"' is:merged label:"autorelease: tagged" sort:created-desc' \
                -L 1 \
                -q '.[0].number' \
                --json number
            echo NUMBER
          } >> "$GITHUB_OUTPUT"
        shell: bash
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
          tag: ${{ github.event.release.tag_name }}
      - name: Mark PR as published
        if: ${{ steps.pr.outputs.number }}
        run: |
          gh pr edit "$pr" \
            --remove-label 'autorelease: tagged' \
            --add-label 'autorelease: published'
        shell: bash
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ github.token }}
          pr: ${{ steps.pr.outputs.number }}
