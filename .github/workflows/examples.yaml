---
name: Examples
on:
  push:
    branches:
      - main
  workflow_call:
    inputs:
      build-matrix:
        description: |
          A list of all Lix versions to test, alongside the supported GHA runners.

          Format: `{"build": [{"lix-version": "<version>", "runs-on": "<os>"}, ...]}`
        type: string
        required: true
jobs:
  flakes:
    name: Flakes
    strategy:
      fail-fast: true
      matrix: >-
        ${{
          fromJson(inputs.build-matrix && inputs.build-matrix || '
            {
              "build": [
                {"runs-on": "macos-13"},
                {"runs-on": "macos-15"},
                {"runs-on": "ubuntu-24.04"}
              ]
            }
          ')
        }}
    runs-on: ${{ matrix.build.runs-on }}
    steps:
      - name: Check out repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - name: Download Lix stores from GitHub
        id: lix-stores
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: lix-stores-${{ runner.os }}-${{ runner.arch }}
      - name: Install Lix
        uses: ./
        with:
          lix-version: ${{ matrix.build.lix-version || null }}
          lix-stores-dir: ${{ steps.lix-stores.outputs.download-path }}
      - name: Set up Nix binary cache
        uses: DeterminateSystems/magic-nix-cache-action@87b14cf437d03d37989d87f0fa5ce4f5dc1a330b # v8
        with:
          diagnostic-endpoint: ""
          use-flakehub: false
      - name: Build flake
        run: |
          nix build ./examples/flakes
        shell: bash
      - name: Print `hello, world` message
        run: |
          ./result/bin/hello
        shell: bash
