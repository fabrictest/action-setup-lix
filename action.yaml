---
name: action-setup-lix
description: Install Lix on GitHub Actions faster than you can refresh your browser
author: F. Emerson
inputs:
  lix-version:
    description: |
      The version of Lix that should be installed.
    # renovate: datasource=github-tags depName=lix-project/lix
    default: 2.91.1
  nix-conf:
    description: |
      If set, this configuration is appended to `$XDG_CONFIG_HOME/nix/nix.conf`,
      which is read by Lix.
      See https://docs.lix.systems/manual/lix/stable/command-ref/conf-file.html
      for information on what settings that are available.
      Make sure your settings are supported by the Lix version you're using.
    required: false
  token:
    description: |
      Token to authenticate to the GitHub API.
      Lix will use this token when fetching content from GitHub.
    default: ${{ github.token }}
  lix-on-tmpfs:
    description: |
      Installs /nix on a tmpfs mount.
      This can make Lix operations faster,
      but you risk running out of memory if your Lix store grows too big.
      Only enable this if you're absolutely sure the size of your Lix store
      (and database, logs, etc.)
      will be considerably less than the available memory.

      This option does nothing on macOS runners.
    default: false
  lix-store-base-dir:
    default: ${{ runner.temp }}/${{ github.action_repository || github.repository }}
runs:
  using: composite
  steps:
    - name: Install Lix
      run: ./action.bash
      shell: bash
      working-directory: ${{ github.action_path }}
      env:
        # XXX(eff): https://github.com/orgs/community/discussions/49245
        GH_ACTION_REPOSITORY: ${{ github.action_repository || github.repository }}
        GITHUB_TOKEN: ${{ inputs.token }}
        LIX_ON_TMPFS: ${{ inputs.lix-on-tmpfs == 'true' }}
        LIX_STORE_FILE: >-
          ${{
            format('{0}/lix-{1}-{2}-{3}.tar.zstd',
              inputs.lix-store-base-dir,
              inputs.lix-version,
              fromJSON('{"ARM64": "aarch64", "X64": "x86_64"}')[runner.arch],
              fromJSON('{"macOS": "darwin", "Linux": "linux"}')[runner.os]
            )
          }}
        NIX_CONF: ${{ inputs.nix-conf || null }}
branding:
  icon: package
  color: purple
